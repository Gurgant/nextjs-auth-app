name: Test Suite

on:
  push:
    branches: [main, develop, 'feature/**']
  pull_request:
    branches: [main, develop]
  workflow_dispatch:

env:
  NODE_VERSION: '20'
  PNPM_VERSION: '10.12.1'

jobs:
  # ========== Unit & Integration Tests ==========
  unit-integration-tests:
    name: Unit & Integration Tests
    runs-on: ubuntu-latest
    
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres123
          POSTGRES_DB: test_db
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: ${{ env.PNPM_VERSION }}

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'pnpm'

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Setup test database
        env:
          DATABASE_URL: postgresql://postgres:postgres123@localhost:5432/test_db
        run: |
          pnpm prisma:generate
          pnpm prisma:push

      - name: Run unit tests
        run: pnpm test:unit

      - name: Setup test database for integration tests
        env:
          DATABASE_URL: postgresql://postgres:postgres123@localhost:5433/test_db
        run: |
          docker run -d --name postgres-test \
            -e POSTGRES_USER=postgres \
            -e POSTGRES_PASSWORD=postgres123 \
            -e POSTGRES_DB=nextjs_auth_db \
            -p 5433:5432 \
            postgres:15
          sleep 5
          pnpm prisma db push --skip-generate

      - name: Run integration tests
        env:
          DATABASE_URL: postgresql://postgres:postgres123@localhost:5433/nextjs_auth_db
          TEST_MODE: real
        run: pnpm test:integration

      - name: Run hybrid tests
        env:
          DATABASE_URL: postgresql://postgres:postgres123@localhost:5432/test_db
          TEST_MODE: real
        run: pnpm test:hybrid:real

      - name: Upload coverage reports
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: coverage-reports
          path: coverage/

  # ========== E2E Tests ==========
  e2e-tests:
    name: E2E Tests
    runs-on: ubuntu-latest
    
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres123
          POSTGRES_DB: nextjs_auth_db
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5433:5432

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: ${{ env.PNPM_VERSION }}

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'pnpm'

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Setup database
        env:
          DATABASE_URL: postgresql://postgres:postgres123@localhost:5433/nextjs_auth_db
        run: |
          pnpm prisma:generate
          pnpm prisma:push

      - name: Install Playwright browsers
        run: pnpm exec playwright install chromium

      - name: Build application
        run: pnpm build

      - name: Run E2E tests
        env:
          DATABASE_URL: postgresql://postgres:postgres123@localhost:5433/nextjs_auth_db
          NEXTAUTH_URL: http://localhost:3000
          NEXTAUTH_SECRET: test-secret-for-ci
          CI: true
        run: |
          pnpm start &
          sleep 10
          pnpm test:e2e:chromium

      - name: Upload test results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: playwright-report
          path: playwright-report/
          retention-days: 30

      - name: Upload test videos
        uses: actions/upload-artifact@v4
        if: failure()
        with:
          name: test-videos
          path: test-results/

  # ========== Performance Tests ==========
  performance-tests:
    name: Performance Tests
    runs-on: ubuntu-latest
    
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres123
          POSTGRES_DB: nextjs_auth_db
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: ${{ env.PNPM_VERSION }}

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'pnpm'

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Setup database
        env:
          DATABASE_URL: postgresql://postgres:postgres123@localhost:5432/nextjs_auth_db
        run: |
          pnpm prisma:generate
          pnpm prisma:push

      - name: Build application
        run: pnpm build

      - name: Run performance tests
        env:
          DATABASE_URL: postgresql://postgres:postgres123@localhost:5432/nextjs_auth_db
          NEXTAUTH_URL: http://localhost:3000
          NEXTAUTH_SECRET: test-secret-for-ci
        run: |
          pnpm start &
          sleep 10
          pnpm perf:quick || true
          
      - name: Upload performance results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: performance-results
          path: performance-tests/results/

  # ========== Code Quality Checks ==========
  code-quality:
    name: Code Quality
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: ${{ env.PNPM_VERSION }}

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'pnpm'

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Generate Prisma client
        run: pnpm prisma generate

      - name: Run linter
        run: pnpm lint

      - name: Run type checking
        run: pnpm typecheck

      - name: Check formatting
        run: pnpm exec prettier --check .

  # ========== Summary Report ==========
  test-summary:
    name: Test Summary
    runs-on: ubuntu-latest
    needs: [unit-integration-tests, e2e-tests, performance-tests, code-quality]
    if: always()
    
    steps:
      - name: Check test results
        run: |
          echo "## Test Results Summary"
          echo "Unit & Integration: ${{ needs.unit-integration-tests.result }}"
          echo "E2E Tests: ${{ needs.e2e-tests.result }}"
          echo "Performance Tests: ${{ needs.performance-tests.result }}"
          echo "Code Quality: ${{ needs.code-quality.result }}"
          
      - name: Set status
        if: |
          needs.unit-integration-tests.result == 'failure' ||
          needs.e2e-tests.result == 'failure' ||
          needs.code-quality.result == 'failure'
        run: exit 1